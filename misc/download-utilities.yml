versions:
  codeowners: 1.2.1
  crane: 0.20.3
  docker-buildx: 0.22.0
  docker-compose: 2.34.0
  download-utilities.sh: "3.2"
  gh: 2.69.0
  git-idm: 68c2ee1e406c2f2c72c8399e09564a970a025a0a
  gitleaks: 8.24.2
  goss: 0.4.9
  jq: 1.7.1
  kind: 0.27.0
  kubectl: 1.32.3
  saml2aws: 2.36.19
  shellcheck: 0.10.0
  yq: 4.45.1
checksums:
  crane:
    Darwin:
      arm64: d34f51061a226d1b183480cc7fdc1f7ec410676445cbb2432d89900ac2eb1cb3
      x86_64: 86d4e287adfdaf7de162ac89055d2ecc6da93f6365b602f79695099522d5601f
    Linux:
      arm64: 34bdb2ae7a56139c69cf745ab5cad3d7368e69896d8980e7bcf1ca194854a2ef
      x86_64: 675f3b2f1696c1f6bc55b1ef535163364119776999f3d1471e4558ed35bab548
  docker-buildx:
    darwin:
      arm64: 5898c338abb1f673107bc087997dc3cb63b4ea66d304ce4223472f57bd8d616e
      amd64: 5221ad6b8acd2283f8fbbeebc79ae4b657e83519ca1c1e4cfbb9405230b3d933
    linux:
      arm64: 6e9e455b5ec1c7ac708f2640a86c5cecce38c72e48acff6cb219dfdfa2dda781
      amd64: 805195386fba0cea5a1487cf0d47da82a145ea0a792bd3fb477583e2dbcdcc2f
  docker-compose:
    darwin:
      aarch64: d3835ed0a2fa6895b8bf2bc513ae1999c8b93061d48bc8e3c6384ba4732a4373
      x86_64: db5fe0e8ba306db5ff809730f882b8ddb96853c5b780d9fa6b56ed527b1e053a
    linux:
      aarch64: cd1ef5eda1119edb9314c0224bac97cee14a9c31909a0f7aa0ddfe266e08adaa
      x86_64: 94a416c6f2836a0a1ba5eb3feb00f2e700a9d98311f062c4c61494ccbf3cd457
  download-utilities.sh: 716f80fb818fe801b2abc5b8c8bb22bdfc5159b9892b5707c82a41f915e32857
  gh:
    macOS:
      arm64: 3ca3ab7ad35f1f1b4bef2d75bd0be6d6e966e33cbd76417eb9de8bd49f9d0e57
      amd64: d9f59eb4cb802653a93ba60c1d6e60380a33d927758812f935cea6aefa5fbf1b
    linux:
      arm64: 74ba3f3ee5d9db177f5e925d26ddee01c1ed8eeae5ae002addbd62c81eef81cd
      amd64: b06fb41099eff270153de6e1ad3758e369ceba6cf3dcb1f332e1728ec003045c
  git-idm: d99592623838932190083cd1f2c8bc47af9f97e8fa4b6dab580c80830d4e2071
  gitleaks:
    darwin:
      arm64: c75ea6f594e0a857efa1220fa08088b55e1465a32ab00cfc7aa2ec64cec031fe
      x64: 3ee6a08d5e035aff0d595e137fecffde796dbb0520fa0dd0be9d38baaf62efa6
    linux:
      arm64: 455494f14c34ee5394fa0eef6af986d0eebbabc16aca5be0bdc9bdd62518eb03
      x64: 64805175c8f88959587ba6afc58210401088206a27ba582cfbb98791137d6208
  goss:
    darwin:
      arm64: 111d2ada89f8787838d176011de2fd0cfe8959c64c2698ce28feb587337d01fc
      amd64: e0c1b22360ced9f5394e64244877dfe1d3488aee9de75c56b9e02ae72c3fe4ff
    linux:
      arm64: 14fd24ac08236559f4809e6a627792d1b947ed98654bba1662ef1d6122d77e18
      amd64: 87dd36cfa1b8b50554e6e2ca29168272e26755b19ba5438341f7c66b36decc19
  jq:
    macos:
      arm64: 0bbe619e663e0de2c550be2fe0d240d076799d6f8a652b70fa04aea8a8362e8a
      amd64: 4155822bbf5ea90f5c79cf254665975eb4274d426d0709770c21774de5407443
    linux:
      arm64: 4dd2d8a0661df0b22f1bb9a1f9830f06b6f3b8f7d91211a1ef5d7c4f06a8b4a5
      amd64: 5942c9b0934e510ee61eb3e30273f1b3fe2590df93933a93d7c58b81d19c8ff5
  kind:
    darwin:
      arm64: 2628c53ddf4a2de19950df0452176e400e33b8c83834afab93651c2b6f9546bd
      amd64: 32bd46859a98bffdfc2e594850c4147d297b3f93007f8376b6d4a28e82dee29a
    linux:
      arm64: 1326f87d766e6108c4e140238b55a588721ea612c3ab2c242ed291da3d9f7608
      amd64: b543dca8440de4273be19ad818dcdfcf12ad1f767c962242fcccdb383dff893b
  kubectl:
    darwin:
      arm64: a110af64fc31e2360dd0f18e4110430e6eedda1a64f96e9d89059740a7685bbd
      amd64: b814c523071cd09e27c88d8c87c0e9b054ca0cf5c2b93baf3127750a4f194d5b
    linux:
      arm64: 6c2c91e760efbf3fa111a5f0b99ba8975fb1c58bb3974eca88b6134bcf3717e2
      amd64: ab209d0c5134b61486a0486585604a616a5bb2fc07df46d304b3c95817b2d79f
  saml2aws:
    darwin:
      arm64: 2554c38ed8d0a92902943e6623ef16223e6e8536978c2bfc3301f7e6fc9b7eab
      amd64: ca04b5a67ea852315c9c66acd460cb0501d7fac9aa345e86f1179ccec7c6f0c7
    linux:
      arm64: 039477d1bdbff940e5de067e7a56ab48dcf5303869ff4b74da9d1a5a87d9ac7b
      amd64: ca8ec4da5566bef409c8c582da3cf9f22a8d5e18f7dcba25aeb9670f1ea98980
  shellcheck:
    darwin:
      aarch64: b9e420df8c78ec7d261d66277d5767cbd4cf6da4e4a9f8b02ea4811cd4cc1109
      x86_64: 3fc3ee1458b70da5627af5de97c2adbe7f15ea994c0bfb351a1ddf75526cd4a0
    linux:
      aarch64: 4111c09318d10b93653a42179381273f31061b34987978346fbd19a6e81a74c3
      x86_64: f35ae15a4677945428bdfe61ccc297490d89dd1e544cc06317102637638c6deb
  yq:
    darwin:
      arm64: 83edb55e254993f9043d01a1515205b54ffc2c7ce815a780573da64afaf2c71b
      amd64: cee787479550f0c94662e45251e7bb80f70e7071840bd19ce24542e9bcb4157a
    linux:
      arm64: ceea73d4c86f2e5c91926ee0639157121f5360da42beeb8357783d79c2cc6a1d
      amd64: 654d2943ca1d3be2024089eb4f270f4070f491a0610481d128509b2834870049
  codeowners:
    darwin:
      arm64: 4dd03300edb5116a96c760804780e5bc2f866cddda75030baa7f2e5451edaaf4
      amd64: 3eccd5ed9a09de0483cc418ffe40a8bdef278fb94aa63c14de5bf70e4eb45f5c
    linux:
      arm64: b49ff0dae28b64290e31bb0b5d7d905089a54ffb5bde40a1dcb40fc1a024de65
      amd64: f5fa73add8f5d705f320a027bcfbb2d30dbbbf3ad928d3fc6dc8bb38e521417e

# These utilities are installed by
# https://github.com/samrocketman/yml-install-files
defaults: &defaults
  # dest could be /usr/local/bin in Docker builds
  dest: usr/bin
  perm: '0755'
  checksum_file: checksums/$(uname)-$(arch).sha256
  os:
    Linux: linux
    Darwin: darwin
  arch:
    x86_64: amd64
    aarch64: arm64
  pre_command: |
    if [ ! "${inline_checksum:-false}" = true ]; then
      if [ ! "$HOME" = "$PWD" ]; then
        echo 'ERROR: this must run from the HOME.' >&2
        exit 5
      fi
      if [ "$USER" = root ]; then
        echo 'ERROR: this must run as a normal user.' >&2
        exit 5
      fi
    fi
    if [ "${checksum_failed:-true}" = true ]; then
      rm -f ${dest}/${utility}
    fi
  update: |
    case "${download}" in
      https://github.com/*)
        owner="$(awk -F/ '{print $4"/"$5}' <<< "${download}")"
        export download=https://github.com/"${owner}"/releases/latest
        eval "${default_download_head}" |
        awk '$1 ~ /[Ll]ocation:/ { gsub(".*/[^0-9.]*", "", $0); print;exit}'
        ;;
      https://dl.k8s.io/release*)
        download=https://dl.k8s.io/release/stable.txt
        extract=cat
        export download extract
        eval "${default_download_extract}" |
        awk '{gsub("v", "", $0); print}'
        ;;
      https://get.helm.sh/*)
        export download=https://github.com/helm/helm/releases/latest
        eval "${default_download_head}" |
        awk '$1 ~ /[Ll]ocation:/ { gsub(".*/[^0-9.]*", "", $0); print;exit}'
        ;;
    esac
utility:
  codeowners:
    <<: *defaults
    download: https://github.com/hmarr/codeowners/releases/download/v${version}/codeowners_${version}_${os}_${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  crane:
    <<: *defaults
    # Darwin and Linux
    os:
    # x86_64 and arm64
    arch:
      aarch64: arm64
    download: https://github.com/google/go-containerregistry/releases/download/v${version}/go-containerregistry_${os}_${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  docker-buildx:
    <<: *defaults
    download: https://github.com/docker/buildx/releases/download/v${version}/buildx-v${version}.${os}-${arch}
    post_command: |
      [ -d ~/.docker/cli-plugins ] || mkdir -p ~/.docker/cli-plugins
      ln -fs "${HOME}/${dest}/${utility}" ~/.docker/cli-plugins/
  docker-compose:
    <<: *defaults
    # x86_64 and aarch64 are the two supported architectures.
    arch:
      arm64: aarch64
    download: https://github.com/docker/compose/releases/download/v${version}/docker-compose-${os}-${arch}
    post_command: |
      [ -d ~/.docker/cli-plugins ] || mkdir -p ~/.docker/cli-plugins
      ln -fs "${HOME}/${dest}/${utility}" ~/.docker/cli-plugins/
  download-utilities.sh:
    <<: *defaults
    download: https://github.com/samrocketman/yml-install-files/releases/download/v${version}/universal.tgz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  gh:
    <<: *defaults
    os:
      Linux: linux
      Darwin: macOS
    extension:
      default: tar.gz
      macOS: zip
    default_download_extract: |
      trap '[ ! -f /tmp/file.zip ] || rm -f /tmp/file.zip' EXIT
      if type -P curl; then
        curl -sSfL ${download} | ${extract}
      else
        wget -q -O - ${download} | ${extract}
      fi
    extract:
      macOS: |
        {
          cat > /tmp/file.zip
          unzip -o -j -d ${dest} /tmp/file.zip '*/bin/gh'
        }
      linux: tar -xzC ${dest}/ --no-same-owner --strip-components=2 gh_${version}_${os}_${arch}/bin/gh
    download: https://github.com/cli/cli/releases/download/v${version}/gh_${version}_${os}_${arch}.${extension}
  git-idm:
    <<: *defaults
    download: https://raw.githubusercontent.com/samrocketman/git-identity-manager/${version}/git-idm
    update: >
      git ls-remote https://github.com/samrocketman/git-identity-manager.git |
      awk '$2 == "refs/heads/main" {print $1;exit}'
  gitleaks:
    <<: *defaults
    arch:
      x86_64: x64
      aarch64: arm64
    download: https://github.com/gitleaks/gitleaks/releases/download/v${version}/gitleaks_${version}_${os}_${arch}.tar.gz
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
  goss:
    <<: *defaults
    download: https://github.com/goss-org/goss/releases/download/v${version}/goss-${os}-${arch}
  jq:
    <<: *defaults
    os:
      Linux: linux
      Darwin: macos
    download: https://github.com/jqlang/jq/releases/download/jq-${version}/jq-${os}-${arch}
  kind:
    <<: *defaults
    download: https://github.com/kubernetes-sigs/kind/releases/download/v0.19.0/kind-${os}-${arch}
  kubectl:
    <<: *defaults
    download: https://dl.k8s.io/release/v${version}/bin/${os}/${arch}/kubectl
  saml2aws:
    <<: *defaults
    extract: tar -xzC ${dest}/ --no-same-owner ${utility}
    download: https://github.com/Versent/saml2aws/releases/download/v${version}/saml2aws_${version}_${os}_${arch}.tar.gz
  shellcheck:
    <<: *defaults
    arch:
      Darwin:
        arm64: aarch64
        i386: x86_64
    download: https://github.com/koalaman/shellcheck/releases/download/v${version}/shellcheck-v${version}.${os}.${arch}.tar.xz
    extract: tar -xJC ${dest}/ --no-same-owner --strip-components=1 ${utility}-v${version}/${utility}
  yq:
    <<: *defaults
    download: https://github.com/mikefarah/yq/releases/download/v${version}/yq_${os}_${arch}
